#!/bin/sh

COMPOSE_CMD='docker compose --project-directory'
COMPOSE_HOME=${COMPOSE_HOME:-/docker}
DOCKER_COMPOSE_FILENAME='docker-compose.yml'

COMMAND=$1

print_help() {
	printf '
Usage: compose COMMAND [ARGS] PROJECT_NAME

	Includes all standard docker-compose commands, plus additional ones.
	Run docker-compose --help for more information about the standard commands.


Additional Commands:
	status [no args]              -- Displays information about the projects, 
	                                 including their names and statuses (running,
	                                 down, exited).

	full-restart PROJECT_NAME     -- Performs a full restart by running compose
	                                 down followed by compose up -d

	ls [no args]                  -- Lists Docker Compose projects


Example Usage:
	compose logs traefik          -- Display logs for traefik compose project
	compose logs --follow traefik -- Performs a full restart by running compose down
	                                 followed by compose up -d

	compose full-restart traefik  -- Performs a full restart on traefik compose project

	compose status                -- Displays information about the projects
	compose ls                    -- Lists Docker Compose projects
	compose edit                  -- Open docker-compose file with $EDITOR'
}

while [ "$#" -gt 0 ]; do
    case "$1" in
        -*)
            ARGS="$ARGS $1"
            ;;
        *)
            [ "$COMMAND" != "$1" ] && PROJECT_NAME="$1"
            ;;
    esac
    shift
done


case $COMMAND in
	"--help") 
		print_help 
		exit 0
	;;
	"edit")
		$EDITOR "${COMPOSE_HOME}/${PROJECT_NAME}/${DOCKER_COMPOSE_FILENAME}"
		exit 0
	;;
	"ls")
		ls "${COMPOSE_HOME}"
		exit 0
	;;

	"status")
		printf "%-20s \t%s\n" "NAME" "STATUS"
		command_status=$(docker compose ls -a)
		for i in $(ls "${COMPOSE_HOME}"); do
			PROJECT_DIR=${COMPOSE_HOME}/${i}
			status=down
			possible_status=$(echo "$command_status" | awk "/$i /"'{print $2}' )

			[ ! -z "$possible_status" ] && status=$possible_status

			printf "%-20s \t%s\n" $i $status
		done

		exit 0
	;;

	"full-restart")
		$COMPOSE_CMD "${COMPOSE_HOME}/${PROJECT_NAME}" down
		$COMPOSE_CMD "${COMPOSE_HOME}/${PROJECT_NAME}" up -d
		exit 0
	;;

	"*") ;;
esac

if [ -z $PROJECT_NAME ]; then
	echo "ERROR: Empty project name" 1>&2;
	exit 1
fi
docker compose --project-directory "${COMPOSE_HOME}/${PROJECT_NAME}" $COMMAND $ARGS
